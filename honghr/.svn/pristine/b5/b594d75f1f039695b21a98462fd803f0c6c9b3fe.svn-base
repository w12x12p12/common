package com.hongedu.honghr.honghr.service;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.hongedu.honghr.base.dao.BaseDaoImpl;
import com.hongedu.honghr.base.dao.expression.Exp;
import com.hongedu.honghr.honghr.entity.Code;
import com.hongedu.honghr.util.page.Pager;

/**
 * @author code 表对应业务实现对象 2018/01/04 10:57:56
 */
@Transactional
@Service
public class CodeService {

	@Autowired
	private BaseDaoImpl<Code> codeDao;

	/**
	 * 根据主键查询Code对象
	 * 
	 * @param id
	 * @return
	 */
	public Code findById(Serializable id) {
		return codeDao.findById(Code.class, id);
	}

	/**
	 * 插入Code对象
	 * 
	 * @param entity
	 */
	public void save(Code entity) {
		codeDao.save(entity);
	}

	/**
	 * 修改Code对象
	 * 
	 * @param entity
	 */
	public void update(Code entity) {
		codeDao.update(entity);
	}

	/**
	 * 删除Code对象
	 * 
	 * @param id
	 */
	public void delete(Serializable id) {
		codeDao.delete(Code.class, id);
	}

	/**
	 * 根据sql查询Code对象集合
	 * 
	 * @param currentPage
	 *            当前页
	 * @param pageSize
	 *            分页数
	 * @return Code对象集合
	 */
	public List<Code> findListBySql(int currentPage, int pageSize) {
		StringBuffer sql = new StringBuffer();
		sql.append("select code.* from code");
		return codeDao.findListBySql(Code.class, sql.toString(), currentPage, pageSize);
	}

	/**
	 * 根据sql查询Code集合数量
	 * 
	 * @return Code集合数量
	 */
	public int findCountBySql() {
		StringBuffer sql = new StringBuffer();
		sql.append("select count(1) from code");
		return codeDao.findCountBySql(sql.toString());
	}

	/**
	 * 根据sql查询Code分页对象
	 * 
	 * @param currentPage
	 *            当前页
	 * @param pageSize
	 *            分页数
	 * @return Code分页对象
	 */
	public Pager<Code> findPageBySql(int currentPage, int pageSize) {
		int totalRecord = findCountBySql();
		Pager<Code> pager = new Pager<Code>(currentPage, pageSize, totalRecord);
		List<Code> dataList = findListBySql(pager.getFromIndex(), pageSize);
		pager.setDataList(dataList);
		return pager;
	}

	/**
	 * 根据表达式查询Code对象集合
	 * 
	 * @param currentPage
	 *            当前页
	 * @param pageSize
	 *            分页数
	 * @return Code对象集合
	 */
	public List<Code> findList(int currentPage, int pageSize) {
		List<Exp> expList = new ArrayList<Exp>();
		return codeDao.findList(Code.class, expList, currentPage, pageSize);
	}

	/**
	 * 根据表达式查询Code集合数量
	 * 
	 * @return Code集合数量
	 */
	public int findCount() {
		List<Exp> expList = new ArrayList<Exp>();
		return codeDao.findCount(Code.class, expList);
	}

	/**
	 * 根据表达式查询Code分页对象
	 * 
	 * @param currentPage
	 *            当前页
	 * @param pageSize
	 *            分页数
	 * @return Code分页对象
	 */
	public Pager<Code> findPage(int currentPage, int pageSize) {
		int totalRecord = findCount();
		Pager<Code> pager = new Pager<Code>(currentPage, pageSize, totalRecord);
		List<Code> dataList = findList(pager.getFromIndex(), pageSize);
		pager.setDataList(dataList);
		return pager;
	}

	public List<Code> findCodeById(Integer menuCode) {
		StringBuilder sb = new StringBuilder();
		sb.append("select code_id, code_name, code_parent_id, code_value ");
		sb.append("from code ");
		sb.append("where code_parent_id = ? ");
		return codeDao.findEntityListBySql(Code.class, sb.toString(), new Object[] { menuCode });
	}
}