
package com.hongedu.honghr.honghr.web;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hongedu.honghr.util.json.JsonResult;
import com.hongedu.honghr.util.page.Pager;
import com.hongedu.honghr.honghr.common.constant.PageConstant;
import com.hongedu.honghr.honghr.entity.Code;
import com.hongedu.honghr.honghr.service.CodeService;

/**
 * @author code 表对应的controller 2018/01/04 10:57:56
 */
@Controller
@RequestMapping("/admin/code")
public class CodeController {

	@Autowired
	private CodeService codeService;

	/**
	 * 查询Code表单页面
	 * @param currentPage
	 *            当前页
	 * @param pageSize
	 *            分页数
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/codeList", method = RequestMethod.GET)
	public String codeList(
			@RequestParam(required = false, defaultValue = PageConstant.DEFAULT_PAGE_START) Integer currentPage,
			@RequestParam(required = false, defaultValue = PageConstant.DEFAULT_PAGE_SIZE) Integer pageSize,
			String codeName, Model model) {
		Pager<Code> page = codeService.findPage(codeName, currentPage, pageSize);
		for (int i = 0; i < page.getDataList().size(); i++) {
			Integer codeParentId = page.getDataList().get(i).getCodeParentId();
			Code codes = codeService.findByParentId(codeParentId);
			page.getDataList().get(i).setParentName(codes.getCodeName());
		}
		model.addAttribute("page", page);
		model.addAttribute("codeName", codeName);
		return "admin/code/codeList";
	}

	/**
	 * 查询Code详情
	 * 
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/findCode", method = RequestMethod.POST)
	public JsonResult findCode(@RequestParam(required = true) java.lang.Integer codeId) {
		try {
			Code code = codeService.findById(codeId);
			return new JsonResult(JsonResult.SUCCESS_CODE, "", code);
		} catch (Exception e) {
			e.printStackTrace();
			return new JsonResult(JsonResult.FAILE_CODE, "系统异常", null);
		}
	}

	/**
	 * 编辑Code
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping(value = "/editCode", method = RequestMethod.GET)
	public String editCode(java.lang.Integer codeId, Model model) {
		if (codeId != null) {
			Code code = codeService.findById(codeId);
			Code parent = codeService.findByParentId(code.getCodeParentId());
			model.addAttribute("code", code);
			model.addAttribute("parent", parent);
		}
		List<Code> list = codeService.findList1();
		model.addAttribute("list", list);
		return "admin/code/editCode";
	}

	/**
	 * 保存Code
	 * 
	 * @param id
	 * @return
	 */
	@SuppressWarnings("unused")
	@ResponseBody
	@RequestMapping(value = "/saveCode", method = RequestMethod.POST)
	public JsonResult saveCode(Code code) {
		try {
			if (code.getCodeId() == null) {
				Integer codeParentId = code.getCodeParentId();
				if (codeParentId == null) {
					code.setCodeParentId(0);
					Code maxParentCodeNum = codeService.findMaxByPid(0);
					Integer thisCodeValue = Integer.parseInt(maxParentCodeNum.getCodeValue()) + 1;
					if (thisCodeValue != null) {
						code.setCodeValue(String.valueOf(thisCodeValue));
					} else {
						code.setCodeValue("101");
					}
				} else {
					code.setCodeParentId(codeParentId);
					Code maxCodeNum = codeService.findMaxByPid(code.getCodeParentId());
					Integer thisCodeValue = Integer.parseInt(maxCodeNum.getCodeValue()) + 1;
					if (thisCodeValue != null) {
						code.setCodeValue(String.valueOf(thisCodeValue));
					} else {
						String thisCodeValues = maxCodeNum.getCodeValue();
						code.setCodeValue(thisCodeValues + "101");
					}
				}
				codeService.save(code);
			} else {
				codeService.update(code);
			}
			return new JsonResult(JsonResult.SUCCESS_CODE, "", null);
		} catch (Exception e) {
			e.printStackTrace();
			return new JsonResult(JsonResult.FAILE_CODE, "系统异常", null);
		}
	}

	/**
	 * 删除Code
	 * 
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/deleteCode", method = RequestMethod.POST)
	public JsonResult deleteCode(@RequestParam(required = true) java.lang.Integer codeId) {
		try {
			codeService.delete(codeId);
			return new JsonResult(JsonResult.SUCCESS_CODE, "", null);
		} catch (Exception e) {
			e.printStackTrace();
			return new JsonResult(JsonResult.FAILE_CODE, "系统异常", null);
		}
	}
}