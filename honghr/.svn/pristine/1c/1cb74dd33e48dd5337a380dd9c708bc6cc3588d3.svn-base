package com.hongedu.honghr.honghr.service;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.hongedu.honghr.base.dao.BaseDaoImpl;
import com.hongedu.honghr.base.dao.expression.Exp;
import com.hongedu.honghr.honghr.common.constant.DataConstant;
import com.hongedu.honghr.honghr.entity.AbsenceApplyCheck;
import com.hongedu.honghr.honghr.entity.vo.AbsenceApplyCheckVo;
import com.hongedu.honghr.util.page.Pager;

/**
 * @author el_bp_absence_apply_check 表对应业务实现对象 2017/12/07 04:00:56
 */
@Transactional
@Service
public class AbsenceApplyCheckService {

	@Autowired
	private BaseDaoImpl<AbsenceApplyCheck> absenceApplyCheckDao;
	@Autowired
	private BaseDaoImpl<AbsenceApplyCheckVo> absenceApplyCheckVoDao;

	/**
	 * 根据主键查询AbsenceApplyCheck对象
	 * 
	 * @param id
	 * @return
	 */
	public AbsenceApplyCheck findById(Serializable id) {
		return absenceApplyCheckDao.findById(AbsenceApplyCheck.class, id);
	}

	/**
	 * 插入AbsenceApplyCheck对象
	 * 
	 * @param entity
	 */
	public void save(AbsenceApplyCheck entity) {
		absenceApplyCheckDao.save(entity);
	}

	/**
	 * 修改AbsenceApplyCheck对象
	 * 
	 * @param entity
	 */
	public void update(AbsenceApplyCheck entity) {
		absenceApplyCheckDao.update(entity);
	}

	/**
	 * 删除AbsenceApplyCheck对象
	 * 
	 * @param id
	 */
	public void delete(Serializable id) {
		absenceApplyCheckDao.delete(AbsenceApplyCheck.class, id);
	}

	/**
	 * 根据sql查询AbsenceApplyCheck对象集合
	 * 
	 * @param currentPage
	 *            当前页
	 * @param pageSize
	 *            分页数
	 * @return AbsenceApplyCheck对象集合
	 */
	public List<AbsenceApplyCheck> findListBySql(int currentPage, int pageSize) {
		StringBuffer sql = new StringBuffer();
		sql.append("select absence_apply_check.* from absence_apply_check");
		return absenceApplyCheckDao.findListBySql(AbsenceApplyCheck.class, sql.toString(), currentPage, pageSize);
	}

	/**
	 * 根据sql查询AbsenceApplyCheck集合数量
	 * 
	 * @return AbsenceApplyCheck集合数量
	 */
	public int findCountBySql() {
		StringBuffer sql = new StringBuffer();
		sql.append("select count(1) from absence_apply_check");
		return absenceApplyCheckDao.findCountBySql(sql.toString());
	}

	/**
	 * 根据sql查询AbsenceApplyCheck分页对象
	 * 
	 * @param currentPage
	 *            当前页
	 * @param pageSize
	 *            分页数
	 * @return AbsenceApplyCheck分页对象
	 */
	public Pager<AbsenceApplyCheck> findPageBySql(int currentPage, int pageSize) {
		int totalRecord = findCountBySql();
		Pager<AbsenceApplyCheck> pager = new Pager<AbsenceApplyCheck>(currentPage, pageSize, totalRecord);
		List<AbsenceApplyCheck> dataList = findListBySql(pager.getFromIndex(), pageSize);
		pager.setDataList(dataList);
		return pager;
	}

	/**
	 * 根据表达式查询AbsenceApplyCheck对象集合
	 * 
	 * @param currentPage
	 *            当前页
	 * @param pageSize
	 *            分页数
	 * @return AbsenceApplyCheck对象集合
	 */
	public List<AbsenceApplyCheck> findList(int currentPage, int pageSize) {
		List<Exp> expList = new ArrayList<Exp>();
		return absenceApplyCheckDao.findList(AbsenceApplyCheck.class, expList, currentPage, pageSize);
	}

	/**
	 * 根据表达式查询AbsenceApplyCheck集合数量
	 * 
	 * @return AbsenceApplyCheck集合数量
	 */
	public int findCount() {
		List<Exp> expList = new ArrayList<Exp>();
		return absenceApplyCheckDao.findCount(AbsenceApplyCheck.class, expList);
	}

	/**
	 * 根据表达式查询AbsenceApplyCheck分页对象
	 * 
	 * @param currentPage
	 *            当前页
	 * @param pageSize
	 *            分页数
	 * @return AbsenceApplyCheck分页对象
	 */
	public Pager<AbsenceApplyCheck> findPage(int currentPage, int pageSize) {
		int totalRecord = findCount();
		Pager<AbsenceApplyCheck> pager = new Pager<AbsenceApplyCheck>(currentPage, pageSize, totalRecord);
		List<AbsenceApplyCheck> dataList = findList(pager.getFromIndex(), pageSize);
		pager.setDataList(dataList);
		return pager;
	}

	public List<AbsenceApplyCheckVo> findAbsenceApplyCheckVosByApplyId(Integer absenceApplyId) {
		StringBuilder sb = new StringBuilder();
		sb.append(
				"select ac.absence_apply_check_id, ac.absence_apply_id, ac.check_employee_id, ac.apply_check_sequence, ac.deleted, ");
		sb.append("e.employee_name checkEmployeeName ");
		sb.append("from absence_apply_check ac ");
		sb.append("left join employee e on ac.check_employee_id = e.employee_id ");
		sb.append("where ac.absence_apply_id = ? ");
		sb.append("and ac.deleted = ? ");
		sb.append("order by ac.apply_check_sequence asc ");
		return absenceApplyCheckVoDao.findEntityListBySql(AbsenceApplyCheckVo.class, sb.toString(),
				new Object[] { absenceApplyId, DataConstant.EXIST });
	}
}