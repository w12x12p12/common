
package com.hongedu.honghr.honghr.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hongedu.honghr.honghr.common.constant.PageConstant;
import com.hongedu.honghr.honghr.entity.AbsenceApply;
import com.hongedu.honghr.honghr.entity.vo.AbsenceApplyVo;
import com.hongedu.honghr.honghr.service.AbsenceApplyService;
import com.hongedu.honghr.util.json.JsonResult;
import com.hongedu.honghr.util.page.Pager;

/**
 * @author absence_apply 表对应的controller 2017/12/07 04:04:38
 */
@Controller
@RequestMapping("/admin/absenceApply")
public class AbsenceApplyController {

	@Autowired
	private AbsenceApplyService absenceApplyService;

	/**
	 * 查询休假申请列表页面
	 * 
	 * @param currentPage:当前页
	 * @param pageSize:分页数
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/absenceApplyList", method = RequestMethod.GET)
	public String absenceApplyList(
			@RequestParam(required = false, defaultValue = PageConstant.DEFAULT_PAGE_START) Integer currentPage,
			@RequestParam(required = false, defaultValue = PageConstant.DEFAULT_PAGE_SIZE) Integer pageSize,
			Model model) {
		Pager<AbsenceApplyVo> page = absenceApplyService.findPage(currentPage, pageSize);
		model.addAttribute("page", page);
		return "admin/absenceApply/absenceApplyList";
	}

	/**
	 * 查询待审批休假申请列表页面
	 * 
	 * @param currentPage:当前页
	 * @param pageSize:分页数
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/absenceApplyListForCheck", method = RequestMethod.GET)
	public String absenceApplyListForCheck(
			@RequestParam(required = false, defaultValue = PageConstant.DEFAULT_PAGE_START) Integer currentPage,
			@RequestParam(required = false, defaultValue = PageConstant.DEFAULT_PAGE_SIZE) Integer pageSize,
			Model model) {
		Pager<AbsenceApplyVo> page = absenceApplyService.findForCheckPage(currentPage, pageSize);
		model.addAttribute("page", page);
		return "admin/absenceApply/absenceApplyListForCheck";
	}

	/**
	 * 查询AbsenceApply详情
	 * 
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/findAbsenceApply", method = RequestMethod.POST)
	public JsonResult findAbsenceApply(@RequestParam(required = true) java.lang.Integer absenceApplyId) {
		try {
			AbsenceApply absenceApply = absenceApplyService.findById(absenceApplyId);
			return new JsonResult(JsonResult.SUCCESS_CODE, "", absenceApply);
		} catch (Exception e) {
			e.printStackTrace();
			return new JsonResult(JsonResult.FAILE_CODE, "系统异常", null);
		}
	}

	/**
	 * 编辑AbsenceApply
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping(value = "/editAbsenceApply", method = RequestMethod.GET)
	public String editAbsenceApply(java.lang.Integer absenceApplyId, Model model) {
		if (absenceApplyId != null) {
			AbsenceApply absenceApply = absenceApplyService.findById(absenceApplyId);
			model.addAttribute("absenceApply", absenceApply);
		}
		return "admin/absenceApply/editAbsenceApply";
	}

	/**
	 * 保存AbsenceApply
	 * 
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/saveAbsenceApply", method = RequestMethod.POST)
	public JsonResult saveAbsenceApply(AbsenceApply absenceApply) {
		try {
			if (absenceApply.getAbsenceApplyId() == null) {
				absenceApplyService.save(absenceApply);
			} else {
				absenceApplyService.update(absenceApply);
			}
			return new JsonResult(JsonResult.SUCCESS_CODE, "", null);
		} catch (Exception e) {
			e.printStackTrace();
			return new JsonResult(JsonResult.FAILE_CODE, "系统异常", null);
		}
	}

	/**
	 * 删除AbsenceApply
	 * 
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/deleteAbsenceApply", method = RequestMethod.POST)
	public JsonResult deleteAbsenceApply(@RequestParam(required = true) java.lang.Integer absenceApplyId) {
		try {
			absenceApplyService.delete(absenceApplyId);
			return new JsonResult(JsonResult.SUCCESS_CODE, "", null);
		} catch (Exception e) {
			e.printStackTrace();
			return new JsonResult(JsonResult.FAILE_CODE, "系统异常", null);
		}
	}
}
